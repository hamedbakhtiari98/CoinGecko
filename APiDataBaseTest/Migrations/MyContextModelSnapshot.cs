// <auto-generated />
using System;
using APiDataBaseTest.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APiDataBaseTest.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APiDataBaseTest.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("market_cap")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updated_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("volume_24h")
                        .HasColumnType("float");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("APiDataBaseTest.Crypto", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cryptos");
                });

            modelBuilder.Entity("APiDataBaseTest.CryptoInfo", b =>
                {
                    b.Property<int>("CryptoInfoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CryptoInfoid"));

                    b.Property<string>("CryptoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("current_price")
                        .HasColumnType("float");

                    b.Property<string>("last_updated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("market_cap")
                        .HasColumnType("float");

                    b.Property<double?>("total_volume")
                        .HasColumnType("float");

                    b.HasKey("CryptoInfoid");

                    b.HasIndex("CryptoId")
                        .IsUnique();

                    b.ToTable("CryptoInfos");
                });

            modelBuilder.Entity("APiDataBaseTest.OHLC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("C")
                        .HasColumnType("float");

                    b.Property<string>("CryptoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("H")
                        .HasColumnType("float");

                    b.Property<double?>("L")
                        .HasColumnType("float");

                    b.Property<double?>("O")
                        .HasColumnType("float");

                    b.Property<string>("dateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CryptoId");

                    b.ToTable("OHLCs");
                });

            modelBuilder.Entity("APiDataBaseTest.CryptoInfo", b =>
                {
                    b.HasOne("APiDataBaseTest.Crypto", "Crypto")
                        .WithOne("CryptoInfo")
                        .HasForeignKey("APiDataBaseTest.CryptoInfo", "CryptoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crypto");
                });

            modelBuilder.Entity("APiDataBaseTest.OHLC", b =>
                {
                    b.HasOne("APiDataBaseTest.Crypto", "Crypto")
                        .WithMany("OHLCs")
                        .HasForeignKey("CryptoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crypto");
                });

            modelBuilder.Entity("APiDataBaseTest.Crypto", b =>
                {
                    b.Navigation("CryptoInfo");

                    b.Navigation("OHLCs");
                });
#pragma warning restore 612, 618
        }
    }
}
